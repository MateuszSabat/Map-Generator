#pragma kernel CSEditSlope

RWStructuredBuffer<float> height;
RWStructuredBuffer<float> slope;
uint size;

float slope1(float h1, float h2, float h3) { // height[i], height[i+1], height[i + size + 1]
	float3 n = normalize(float3(h2 - h3, 1.0f, h1 - h2));
	float3 u = float3(0, 1, 0);
	return length(cross(n, u)) / dot(n, u);
}
float slope2(float h1, float h3, float h4) { //height[i], height[i+size + 1], height[i + size]
	float3 n = normalize(float3(h1 - h4, 1.0f, h4 - h3));
	float3 u = float3(0, 1, 0);
	return length(cross(n, u)) / dot(n, u);
}

float slope12(uint i) {
	float h1 = height[i];
	float h2 = height[i + 1];
	float h3 = height[i + size + 1];
	float h4 = height[i + size];

	return (slope1(h1, h2, h3) + slope2(h1, h3, h4)) * 0.5f;
}

[numthreads(8,8,1)]
void CSEditSlope(uint3 id : SV_DispatchThreadID)
{
	if(id.x >= size || id.y >= size)
		return;

	uint i = id.x * size + id.y;

	if (id.x == size - 1) {
		uint j = (id.x - 1) * size + id.y;
		slope[i] = slope12(j);
		return;
	}
	if (id.y == size - 1) {
		uint j = id.x * size + id.y - 1;
		slope[i] = slope12(j);
		return;
	}

	slope[i] = slope12(i);
}
